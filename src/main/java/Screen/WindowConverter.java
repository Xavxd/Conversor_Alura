/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Screen;

import javax.swing.JOptionPane;

/**
 *
 * @author jon20
 */
public class WindowConverter extends javax.swing.JFrame {

    /**
     * Creates new form WindowConvertor
     */
    public WindowConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        PackFrom = new javax.swing.JComboBox<>();
        PackTo = new javax.swing.JComboBox<>();
        From = new javax.swing.JLabel();
        To = new javax.swing.JLabel();
        Input = new javax.swing.JTextField();
        Result = new javax.swing.JTextField();
        Calculate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));

        Title.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        Title.setForeground(new java.awt.Color(153, 0, 0));
        Title.setText("Converter");

        PackFrom.setBackground(new java.awt.Color(153, 0, 0));
        PackFrom.setForeground(new java.awt.Color(255, 255, 255));
        PackFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dolar-USD", "Euro-EUR", "Libra esterlina - GBP", "Yen japonés - JPY", "Real brasileño - BRL", "Rublo ruso - RUB", "Peso mexicano - MXN", "Grados Celcius - C", "Grados Farenheit - F", "Grados Kelvin -K" }));
        PackFrom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                PackFromItemStateChanged(evt);
            }
        });
        PackFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PackFromActionPerformed(evt);
            }
        });

        PackTo.setBackground(new java.awt.Color(153, 0, 0));
        PackTo.setForeground(new java.awt.Color(255, 255, 255));
        PackTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dolar-USD", "Euro-EUR", "Libra esterlina - GBP", "Yen japonés - JPY", "Real brasileño - BRL", "Rublo ruso - RUB", "Peso mexicano - MXN", "Grados Celcius - C", "Grados Farenheit - F", "Grados Kelvin -K" }));
        PackTo.setBorder(null);
        PackTo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PackTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PackToActionPerformed(evt);
            }
        });

        From.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        From.setForeground(new java.awt.Color(102, 0, 0));
        From.setText("From");

        To.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        To.setForeground(new java.awt.Color(102, 0, 0));
        To.setText("To");

        Input.setBackground(new java.awt.Color(255, 255, 255));
        Input.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(153, 0, 0)));
        Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputActionPerformed(evt);
            }
        });

        Result.setEnabled(false);
        Result.setBackground(new java.awt.Color(255, 255, 255));
        Result.setForeground(new java.awt.Color(0, 0, 0));
        Result.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(153, 0, 0)));
        Result.setCaretColor(new java.awt.Color(0, 0, 0));
        Result.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Result.setSelectionColor(new java.awt.Color(0, 0, 0));
        Result.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResultActionPerformed(evt);
            }
        });

        Calculate.setBackground(new java.awt.Color(153, 0, 0));
        Calculate.setForeground(new java.awt.Color(255, 255, 255));
        Calculate.setText("Calculate");
        Calculate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("Result");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(From, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 256, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Calculate, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(Title)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(To, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(PackTo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Result, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(PackFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title)
                .addGap(37, 37, 37)
                .addComponent(From)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PackFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(To)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PackTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(Calculate)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PackFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PackFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PackFromActionPerformed

    private void PackFromItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_PackFromItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_PackFromItemStateChanged

    private void InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputActionPerformed

    private void PackToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PackToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PackToActionPerformed

    private void CalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateActionPerformed
        // TODO add your handling code here:
        int positionFrom = PackFrom.getSelectedIndex();
        int positionTo = PackTo.getSelectedIndex();
        
        //obteniendo el input del usuario
        String inputnum = Input.getText();
        if (!inputnum.isEmpty()){//loop to see if input is valid 
        
        double num = Integer.parseInt(inputnum);
        double conversion=0;
        
        //conversiones de USD -0
        if(positionFrom==0){
            switch(positionTo){
                case 0 -> conversion= num;
                case 1 -> conversion= num * 0.91;
                case 2 -> conversion= num * 0.78;
                case 3 -> conversion= num * 141.14;
                case 4 -> conversion= num * 4.73;
                case 5 -> conversion= num * 92.060;
                case 6 -> conversion= num * 16.68;
                default -> System.out.println("selecciona un pais valido");
            }
        }
        
        //conversiones de EUR -1
        if(positionFrom==1){
            switch(positionTo){
                case 0 -> conversion= num * 1.10;
                case 1 -> conversion= num;
                case 2 -> conversion= num * 0.86;
                case 3 -> conversion= num * 155.70;
                case 4 -> conversion= num * 5.22;
                case 5 -> conversion= num * 101.56;
                case 6 -> conversion= num * 18.41;
                default -> System.out.println("selecciona un pais valido");
            }
        }
        
        //conversiones de GBP -2
        if(positionFrom==2){
            switch(positionTo){
                case 0 -> conversion= num * 1.28;
                case 1 -> conversion= num * 1.16;
                case 2 -> conversion= num;
                case 3 -> conversion= num * 181.31;
                case 4 -> conversion= num * 6.08;
                case 5 -> conversion= num * 118.26;
                case 6 -> conversion= num * 21.44;
                default -> System.out.println("selecciona un pais valido");
            }
        }
        
        //conversiones de JPY -3
        if(positionFrom==3){
            switch(positionTo){
                case 0 -> conversion= num * 0.01;
                case 1 -> conversion= num * 0.01;
                case 2 -> conversion= num * 0.01;
                case 3 -> conversion= num;
                case 4 -> conversion= num * 0.03;
                case 5 -> conversion= num * 0.65;
                case 6 -> conversion= num * 0.12;
                default -> System.out.println("selecciona un pais valido");
            }
        }
        //conversiones de BRL -4
        if(positionFrom==4){
            switch(positionTo){
                case 0 -> conversion= num * 0.21;
                case 1 -> conversion= num * 0.19;
                case 2 -> conversion= num * 0.16;
                case 3 -> conversion= num * 29.83;
                case 4 -> conversion= num;
                case 5 -> conversion= num * 49.46;
                case 6 -> conversion= num * 3.53;
                default -> System.out.println("selecciona un pais valido");
            }
        }
        //conversiones de RUB -5
        if(positionFrom==5){
            switch(positionTo){
                case 0 -> conversion= num * 0.01;
                case 1 -> conversion= num * 0.01;
                case 2 -> conversion= num * 0.01;
                case 3 -> conversion= num * 1.53;
                case 4 -> conversion= num * 0.050;
                case 5 -> conversion= num;
                case 6 -> conversion= num * 0.18;
                default -> System.out.println("selecciona un pais valido");
            }
        }
        //conversiones de MXN -6
        if(positionFrom==6){
            switch(positionTo){
                case 0 -> conversion= num * 0.06;
                case 1 -> conversion= num * 0.055;
                case 2 -> conversion= num * 0.045;
                case 3 -> conversion= num * 8.46;
                case 4 -> conversion= num * 0.028;
                case 5 -> conversion= num * 5.52;
                case 6 -> conversion= num;
                default -> System.out.println("selecciona una opción valida");
            }
        }
        String res = Double.toString(conversion);
        Result.setText(res);
        
        if((positionFrom>6 && positionTo<6)||(positionTo>6 && positionFrom<6) ){
           // Solo permitir conversiones de temperatura a temperatura
           JOptionPane.showMessageDialog(this, "solo se puede convertir de Temperatura a Temperatura");
           
           //loop para seleccionar los index de los combobox en un index valido para convertir temperaturas
           if (positionFrom>6&&positionTo<6){
               PackTo.setSelectedIndex(7);
           }
           
           if (positionTo>6 && positionFrom<6){
               PackFrom.setSelectedIndex(7);
            }
        }
        
        //-----------------Temperatures
        if (positionFrom>6 && positionTo >6){
            
            String tempIn = Input.getText();
            double temp = Double.parseDouble(tempIn);
            double calculoTemp=0;
            
             //conversiones de C -7
             if(positionFrom==7){
               switch(positionTo){
                    case 7 -> calculoTemp= temp;
                    case 8 -> calculoTemp= (temp* 9/5) + 32;
                    case 9 -> calculoTemp= temp+237.15;
                    default -> System.out.println("selecciona una opción valida");
                }
            }
             
             //conversiones de F -8
             if(positionFrom==8){
               switch(positionTo){
                    case 7 -> calculoTemp= (5/9)*(temp-32);
                    case 8 -> calculoTemp= temp;
                    case 9 -> calculoTemp= (5/9)*(temp-32)+273.15;
                    default -> System.out.println("selecciona una opción valida");
                }
            }
             
             //conversiones de K -9
             if(positionFrom==9){
               switch(positionTo){
                    case 7 -> calculoTemp= temp-273.15;
                    case 8 -> calculoTemp= (temp-273.15)*(9/5)+32;
                    case 9 -> calculoTemp= temp;
                    default -> System.out.println("selecciona una opción valida");
                }
            }
             String tempFinal = Double.toString(calculoTemp);
             Result.setText(tempFinal);
             
        }
        
        
     }else { //fin del if para evaluar si el input no es valido
            JOptionPane.showMessageDialog(this, "Porfavor ingresa un valor para convertir");
        }
    }//GEN-LAST:event_CalculateActionPerformed

    private void ResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResultActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calculate;
    private javax.swing.JLabel From;
    private javax.swing.JTextField Input;
    private javax.swing.JComboBox<String> PackFrom;
    private javax.swing.JComboBox<String> PackTo;
    private javax.swing.JTextField Result;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel To;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    public void setMaximumSize(int i, int i0) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
